version: '3.8'

services:
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - video_platform_network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - video_platform_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - video_platform_network

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secretpassword
    volumes:
      - mongodb_data:/data/db
    networks:
      - video_platform_network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - video_platform_network

  # Application Services
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    depends_on:
      - mongodb
      - kafka
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:secretpassword@mongodb:27017/auth_db?authSource=admin
      KAFKA_BROKERS: kafka:29092
      JWT_SECRET: your_jwt_secret_here
    ports:
      - "3000:3000"
    volumes:
      - ./auth-service:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - video_platform_network

  video-service:
    build:
      context: ./video-service
      dockerfile: Dockerfile
    container_name: video-service
    depends_on:
      - mongodb
      - kafka
    environment:
      DJANGO_SETTINGS_MODULE: video_service.settings
      MONGODB_URI: mongodb://admin:secretpassword@mongodb:27017/video_db?authSource=admin
      KAFKA_BROKERS: kafka:29092
    ports:
      - "8000:8000"
    volumes:
      - ./video-service:/app
    networks:
      - video_platform_network

  processing-service:
    build:
      context: ./processing-service
      dockerfile: Dockerfile
    container_name: processing-service
    depends_on:
      - mongodb
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MONGODB_URI: mongodb://admin:secretpassword@mongodb:27017/processing_db?authSource=admin
      KAFKA_BROKERS: kafka:29092
    volumes:
      - ./processing-service:/app
    networks:
      - video_platform_network

  streaming-service:
    build:
      context: ./streaming-service
      dockerfile: Dockerfile
    container_name: streaming-service
    depends_on:
      - redis
      - kafka
      - mongodb
    environment:
      GO_ENV: development
      MONGODB_URI: mongodb://admin:secretpassword@mongodb:27017/streaming_db?authSource=admin
      KAFKA_BROKERS: kafka:29092
      REDIS_URL: redis:6379
    ports:
      - "8090:8090"
    volumes:
      - ./streaming-service:/app
    networks:
      - video_platform_network

networks:
  video_platform_network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: